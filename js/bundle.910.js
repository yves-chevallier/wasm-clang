"use strict";(self.webpackChunksandbox=self.webpackChunksandbox||[]).push([[910],{90910:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/typespec/typespec.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar notBefore = (regex) => `(?!${regex})`;\nvar identifierStart = "[_a-zA-Z]";\nvar identifierContinue = "[_a-zA-Z0-9]";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar directive = bounded(`[_a-zA-Z-0-9]+`);\nvar keywords = [\n  "import",\n  "model",\n  "scalar",\n  "namespace",\n  "op",\n  "interface",\n  "union",\n  "using",\n  "is",\n  "extends",\n  "enum",\n  "alias",\n  "return",\n  "void",\n  "if",\n  "else",\n  "projection",\n  "dec",\n  "extern",\n  "fn"\n];\nvar namedLiterals = ["true", "false", "null", "unknown", "never"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: "//",\n    blockComment: ["/*", "*/"]\n  },\n  brackets: [\n    ["{", "}"],\n    ["[", "]"],\n    ["(", ")"]\n  ],\n  autoClosingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' },\n    { open: "/**", close: " */", notIn: ["string"] }\n  ],\n  surroundingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' }\n  ],\n  indentationRules: {\n    decreaseIndentPattern: new RegExp("^((?!.*?/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$"),\n    increaseIndentPattern: new RegExp(\n      "^((?!//).)*(\\\\{([^}\\"\'`/]*|(\\\\t|[ ])*//.*)|\\\\([^)\\"\'`/]*|\\\\[[^\\\\]\\"\'`/]*)$"\n    ),\n    // e.g.  * ...| or */| or *-----*/|\n    unIndentedLinePattern: new RegExp(\n      "^(\\\\t|[ ])*[ ]\\\\*[^/]*\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*([ ]([^\\\\*]|\\\\*(?!/))*)?$"\n    )\n  }\n};\nvar language = {\n  defaultToken: "",\n  tokenPostfix: ".tsp",\n  brackets: [\n    { open: "{", close: "}", token: "delimiter.curly" },\n    { open: "[", close: "]", token: "delimiter.square" },\n    { open: "(", close: ")", token: "delimiter.parenthesis" }\n  ],\n  symbols: /[=:;<>]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|"|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: "@expression" }, { include: "@whitespace" }],\n    stringVerbatim: [\n      { regex: `(|"|"")[^"]`, action: { token: "string" } },\n      { regex: `"""${notBefore(`"`)}`, action: { token: "string", next: "@pop" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: "delimiter.bracket", next: "@bracketCounting" } },\n      { regex: `[^\\\\\\\\"$]+`, action: { token: "string" } },\n      { regex: "@escapes", action: { token: "string.escape" } },\n      { regex: `\\\\\\\\.`, action: { token: "string.escape.invalid" } },\n      { regex: `"`, action: { token: "string", next: "@pop" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: "delimiter.bracket", next: "@bracketCounting" } },\n      { regex: `}`, action: { token: "delimiter.bracket", next: "@pop" } },\n      { include: "@expression" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: "comment" } },\n      { regex: `\\\\*\\\\/`, action: { token: "comment", next: "@pop" } },\n      { regex: `[\\\\/*]`, action: { token: "comment" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: "comment", next: "@comment" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: "comment" } }\n    ],\n    expression: [\n      { regex: `"""`, action: { token: "string", next: "@stringVerbatim" } },\n      { regex: `"${notBefore(`""`)}`, action: { token: "string", next: "@stringLiteral" } },\n      { regex: numericLiteral, action: { token: "number" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            "@keywords": { token: "keyword" },\n            "@namedLiterals": { token: "keyword" },\n            "@default": { token: "identifier" }\n          }\n        }\n      },\n      { regex: `@${identifier}`, action: { token: "tag" } },\n      { regex: `#${directive}`, action: { token: "directive" } }\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90910\n')}}]);