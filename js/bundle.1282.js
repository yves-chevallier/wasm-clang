"use strict";(self.webpackChunksandbox=self.webpackChunksandbox||[]).push([[1282],{61282:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/sparql/sparql.ts\nvar conf = {\n  comments: {\n    lineComment: "#"\n  },\n  brackets: [\n    ["{", "}"],\n    ["[", "]"],\n    ["(", ")"]\n  ],\n  autoClosingPairs: [\n    { open: "\'", close: "\'", notIn: ["string"] },\n    { open: \'"\', close: \'"\', notIn: ["string"] },\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" }\n  ]\n};\nvar language = {\n  defaultToken: "",\n  tokenPostfix: ".rq",\n  brackets: [\n    { token: "delimiter.curly", open: "{", close: "}" },\n    { token: "delimiter.parenthesis", open: "(", close: ")" },\n    { token: "delimiter.square", open: "[", close: "]" },\n    { token: "delimiter.angle", open: "<", close: ">" }\n  ],\n  keywords: [\n    "add",\n    "as",\n    "asc",\n    "ask",\n    "base",\n    "by",\n    "clear",\n    "construct",\n    "copy",\n    "create",\n    "data",\n    "delete",\n    "desc",\n    "describe",\n    "distinct",\n    "drop",\n    "false",\n    "filter",\n    "from",\n    "graph",\n    "group",\n    "having",\n    "in",\n    "insert",\n    "limit",\n    "load",\n    "minus",\n    "move",\n    "named",\n    "not",\n    "offset",\n    "optional",\n    "order",\n    "prefix",\n    "reduced",\n    "select",\n    "service",\n    "silent",\n    "to",\n    "true",\n    "undef",\n    "union",\n    "using",\n    "values",\n    "where",\n    "with"\n  ],\n  builtinFunctions: [\n    "a",\n    "abs",\n    "avg",\n    "bind",\n    "bnode",\n    "bound",\n    "ceil",\n    "coalesce",\n    "concat",\n    "contains",\n    "count",\n    "datatype",\n    "day",\n    "encode_for_uri",\n    "exists",\n    "floor",\n    "group_concat",\n    "hours",\n    "if",\n    "iri",\n    "isblank",\n    "isiri",\n    "isliteral",\n    "isnumeric",\n    "isuri",\n    "lang",\n    "langmatches",\n    "lcase",\n    "max",\n    "md5",\n    "min",\n    "minutes",\n    "month",\n    "now",\n    "rand",\n    "regex",\n    "replace",\n    "round",\n    "sameterm",\n    "sample",\n    "seconds",\n    "sha1",\n    "sha256",\n    "sha384",\n    "sha512",\n    "str",\n    "strafter",\n    "strbefore",\n    "strdt",\n    "strends",\n    "strlang",\n    "strlen",\n    "strstarts",\n    "struuid",\n    "substr",\n    "sum",\n    "timezone",\n    "tz",\n    "ucase",\n    "uri",\n    "uuid",\n    "year"\n  ],\n  // describe tokens\n  ignoreCase: true,\n  tokenizer: {\n    root: [\n      // resource indicators\n      [/<[^\\s\\u00a0>]*>?/, "tag"],\n      // strings\n      { include: "@strings" },\n      // line comment\n      [/#.*/, "comment"],\n      // special chars with special meaning\n      [/[{}()\\[\\]]/, "@brackets"],\n      [/[;,.]/, "delimiter"],\n      // (prefixed) name\n      [/[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&\'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/, "tag"],\n      [/:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&\'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/, "tag"],\n      // identifiers, builtinFunctions and keywords\n      [\n        /[$?]?[_\\w\\d]+/,\n        {\n          cases: {\n            "@keywords": { token: "keyword" },\n            "@builtinFunctions": { token: "predefined.sql" },\n            "@default": "identifier"\n          }\n        }\n      ],\n      // operators\n      [/\\^\\^/, "operator.sql"],\n      [/\\^[*+\\-<>=&|^\\/!?]*/, "operator.sql"],\n      [/[*+\\-<>=&|\\/!?]/, "operator.sql"],\n      // symbol\n      [/@[a-z\\d\\-]*/, "metatag.html"],\n      // whitespaces\n      [/\\s+/, "white"]\n    ],\n    strings: [\n      [/\'([^\'\\\\]|\\\\.)*$/, "string.invalid"],\n      // non-terminated single-quoted string\n      [/\'$/, "string.sql", "@pop"],\n      [/\'/, "string.sql", "@stringBody"],\n      [/"([^"\\\\]|\\\\.)*$/, "string.invalid"],\n      // non-terminated single-quoted string\n      [/"$/, "string.sql", "@pop"],\n      [/"/, "string.sql", "@dblStringBody"]\n    ],\n    // single-quoted strings\n    stringBody: [\n      [/[^\\\\\']+/, "string.sql"],\n      [/\\\\./, "string.escape"],\n      [/\'/, "string.sql", "@pop"]\n    ],\n    // double-quoted strings\n    dblStringBody: [\n      [/[^\\\\"]+/, "string.sql"],\n      [/\\\\./, "string.escape"],\n      [/"/, "string.sql", "@pop"]\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///61282\n')}}]);